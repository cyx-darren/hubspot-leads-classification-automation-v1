referral_patterns = [
        r'got your contact from my colleague[,\s]+(\w+)',
        r'taken over .* from (\w+)',
        r'(\w+) (shared|kindly shared) your details',
        r'my colleague[,\s]+(\w+)[,\s]+who printed'
    ]
    
    # Process each lead
    for idx, row in self.leads_df.iterrows():
        # Get email content and subject (handle missing data)
        subject = str(row.get('email_subject', '')).lower()
        content = str(row.get('email_content', '')).lower()
        
        # Check PPC campaigns first (highest priority)
        for campaign_name, pattern in ppc_campaign_patterns.items():
            if re.search(pattern, subject, re.IGNORECASE) or re.search(pattern, content, re.IGNORECASE):
                self.leads_df.loc[idx, 'attributed_source'] = 'PPC'
                self.leads_df.loc[idx, 'drill_down'] = f'Google Ads - {campaign_name}'
                self.leads_df.loc[idx, 'email_content_override'] = True
                self.leads_df.loc[idx, 'override_reason'] = f'PPC campaign detected: {campaign_name}'
                break
        
        # Check for payment emails (indicates existing customer)
        elif any(re.search(pattern, content, re.IGNORECASE) for pattern in payment_patterns):
            self.leads_df.loc[idx, 'attributed_source'] = 'Direct'
            self.leads_df.loc[idx, 'email_content_override'] = True
            self.leads_df.loc[idx, 'override_reason'] = 'Payment-related communication (existing customer)'
        
        # Check for repeat customers
        elif any(re.search(pattern, content, re.IGNORECASE) for pattern in repeat_patterns):
            self.leads_df.loc[idx, 'attributed_source'] = 'Direct'
            self.leads_df.loc[idx, 'email_content_override'] = True
            self.leads_df.loc[idx, 'override_reason'] = 'Repeat customer identified'
        
        # Check for referrals
        else:
            for pattern in referral_patterns:
                match = re.search(pattern, content, re.IGNORECASE)
                if match:
                    self.leads_df.loc[idx, 'attributed_source'] = 'Referral'
                    self.leads_df.loc[idx, 'email_content_override'] = True
                    # Try to extract referrer name
                    referrer = match.group(1) if match.groups() else 'colleague'
                    self.leads_df.loc[idx, 'drill_down'] = f'Referral from {referrer}'
                    self.leads_df.loc[idx, 'override_reason'] = f'Referral detected from {referrer}'
                    break