Update test_attribution.py to properly detect GSC credentials in Replit Secrets:

1. Replace the test_gsc_integration() function with:
   ```python
   def test_gsc_integration():
       """Test GSC integration if credentials exist"""
       print("\n" + "="*60)
       print("TESTING GOOGLE SEARCH CONSOLE INTEGRATION")
       print("="*60)
       
       # Check both file and environment
       creds_file = "data/gsc_credentials.json"
       creds_env = os.environ.get('GSC_CREDENTIALS')
       property_url = os.environ.get('GSC_PROPERTY_URL')
       
       has_credentials = os.path.exists(creds_file) or bool(creds_env)
       
       if not has_credentials:
           print("ℹ️  GSC credentials not found - skipping GSC tests")
           print("To enable GSC integration:")
           print("  1. Follow setup guide in data/gsc_setup.md")
           print("  2. Save credentials to data/gsc_credentials.json")
           print("     OR add GSC_CREDENTIALS to Replit Secrets")
           print("  3. Re-run tests")
           return False
       
       # Found credentials
       if creds_env:
           print("✓ GSC credentials found in Replit Secrets")
       else:
           print("✓ GSC credentials found in file")
       
       if not property_url:
           print("⚠️  GSC_PROPERTY_URL not set in environment")
           print("  Add your website URL to Replit Secrets as GSC_PROPERTY_URL")
           return False
       
       print(f"✓ GSC property URL: {property_url}")
       
       # Test actual connection
       try:
           from modules.gsc_client import GoogleSearchConsoleClient
           from datetime import datetime, timedelta
           
           print("\nTesting GSC connection...")
           client = GoogleSearchConsoleClient()
           client.authenticate(property_url)
           
           # Get sample data
           end_date = datetime.now()
           start_date = end_date - timedelta(days=7)
           
           data = client.get_search_queries(start_date, end_date, limit=5)
           
           print(f"✓ Successfully connected to GSC!")
           print(f"✓ Retrieved {len(data)} search queries")
           
           if not data.empty:
               print("\nSample queries with clicks:")
               for _, row in data.head(3).iterrows():
                   print(f"  - '{row['query']}': {row['clicks']} clicks, position {row['position']:.1f}")
               
               total_clicks = data['clicks'].sum()
               print(f"\nTotal clicks from sample: {total_clicks}")
           
           return True
           
       except Exception as e:
           print(f"\n✗ GSC connection test failed: {e}")
           return False